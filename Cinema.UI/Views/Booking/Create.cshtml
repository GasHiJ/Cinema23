@model Cinema.BLL.DTOs.SessionDto

<h2>Оберіть місце</h2>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<div class="seat-map">
    @for (int r = 1; r <= Model.Rows; r++)
    {
        <div class="seat-row">
            <span>Ряд @r:</span>
            @for (int s = 1; s <= Model.SeatsPerRow; s++)
            {
                var bookedSeat = Model.BookedSeats.FirstOrDefault(b => b.Row == r && b.Seat == s);
                string seatClass = "seat available";

                if (bookedSeat != null)
                {
                    seatClass = bookedSeat.UserId == Model.CurrentUserId ? "seat booked-by-user" : "seat booked";
                }

                <form method="post" asp-action="Book" id="seatForm-@r-@s" class="seat-form">
                    <input type="hidden" name="sessionId" value="@Model.Id" />
                    <input type="hidden" name="row" value="@r" />
                    <input type="hidden" name="seat" value="@s" />

                    <button type="button" class="@seatClass seat-button" @(bookedSeat != null ? "disabled" : "")
                            data-row="@r" data-seat="@s">
                        @s
                    </button>
                </form>
            }
        </div>
    }
</div>

<button type="submit" class="btn btn-success mt-3" id="confirmBookingButton">Забронювати</button>

<style>
    .seat-map {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .seat-row {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .seat {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid black;
        cursor: pointer;
    }

    .available {
        background-color: #ccc;
    }

    .booked {
        background-color: red;
        cursor: not-allowed;
    }

    .booked-by-user {
        background-color: green;
    }

    .in-progress {
        background-color: #a8e6a1;
    }

    .alert {
        padding: 10px;
        margin-bottom: 15px;
        border-radius: 5px;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }
</style>

<script>
    let selectedSeats = [];

    document.querySelectorAll('.seat-button').forEach(button => {
        button.addEventListener('click', function() {
            let row = this.getAttribute('data-row');
            let seat = this.getAttribute('data-seat');

            if (selectedSeats.some(seat => seat.row == row && seat.seat == seat)) {
                selectedSeats = selectedSeats.filter(seat => !(seat.row == row && seat.seat == seat));
                this.classList.remove('in-progress');
            } else {
                selectedSeats.push({ row: row, seat: seat });
                this.classList.add('in-progress');
            }
        });
    });

    document.getElementById('confirmBookingButton').addEventListener('click', function() {
        if (selectedSeats.length === 0) {
            alert('Будь ласка, оберіть хоча б одне місце.');
            return;
        }

        selectedSeats.forEach(seat => {
            let form = document.getElementById(`seatForm-${seat.row}-${seat.seat}`);
            form.submit();
        });

        selectedSeats = [];
    });
</script>


